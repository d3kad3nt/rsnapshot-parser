#!/usr/bin/env python3

import argparse
from collections.abc import Sequence

from modules.modules import get_output_module, get_all_module_names
from modules.outputModule import OutputModule
from parser.ParsedOutput import ParsedOutput
from parser.RsnapshotConfig import RsnapshotConfig
from utils.utils import comma_seperated

UTF_8 = "UTF-8"


def get_args() -> argparse.Namespace:
    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        description="This program is used to format the output of rsnapshot and output it to different modules. "
                    "It takes the output of rsnapshot from stdin."
    )
    parser.add_argument("-m", "--modules", nargs="+", required=True,
                        help="A space seperated List of modules. This are the allowed modules: {}".format(
                            comma_seperated(get_all_module_names())))
    return parser.parse_args()


def output_log(output_module_names: Sequence[str], parsed_output: ParsedOutput) -> None:
    for moduleName in output_module_names:
        module: OutputModule = get_output_module(moduleName)
        module.output(parsed_output)


def main() -> None:
    args: argparse.Namespace = get_args()
    config: RsnapshotConfig = RsnapshotConfig()
    parsed_log: ParsedOutput = ParsedOutput(config=config)
    output_log(output_module_names=args.modules, parsed_output=parsed_log)


if __name__ == "__main__":
    main()
