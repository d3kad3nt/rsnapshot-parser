name: release
on:
  push:
    tags:
      - 'v*.*.*'
env:
  MAINTAINER: 'Christoph Wildhagen'
  DESC: 'rsnapshot-parser parses the output of rsnapshot'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: setup deb structure
        run: |
          mkdir -p .debpkg/opt/rsnapshot_parser
          cp -r src/* .debpkg/opt/rsnapshot_parser
          mkdir -p .debpkg/etc
          cp config/rsnapshot_parser.conf .debpkg/etc
          mkdir -p .debpkg/DEBIAN
          cp -r packages/deb/* .debpkg/DEBIAN
          sudo chown -R root:root .debpkg
          sudo chmod +x .debpkg/opt/rsnapshot_parser/rsnapshot_parser
      - uses: jiro4989/build-deb-action@v2
        with:
          package: rsnapshot-parser
          package_root: .debpkg
          maintainer: ${{env.MAINTAINER}}
          depends: 'python3 (>=3.9)'
          version: ${{ github.ref }}
          arch: 'all'
          desc: '${{ env.DESC }}'
      - uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: version
        id: version
        run: |
          echo "::set-output name=version::$(echo "${{ github.ref_name }}" | cut -c 2-)"
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./rsnapshot-parser_${{ steps.version.outputs.version }}_all.deb
          asset_name: rsnapshot-parser_${{ steps.version.outputs.version }}.deb
          asset_content_type: application/vnd.debian.binary-package
